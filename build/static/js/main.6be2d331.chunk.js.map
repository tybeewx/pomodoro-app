{"version":3,"sources":["App.js","index.js"],"names":["padTime","time","toString","padStart","App","useState","title","setTitle","timeLeft","setTimeLeft","isRunning","setIsRunning","intervalRef","useRef","resetTimer","clearInterval","current","minutes","Math","floor","seconds","className","onClick","setInterval","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAGA,SAASA,EAAQC,GACf,OAAOA,EAAKC,WAAWC,SAAS,EAAG,KAGtB,SAASC,IAAO,IAAD,EACFC,mBAAS,4BADP,mBACrBC,EADqB,KACdC,EADc,OAEIF,mBAAS,MAFb,mBAErBG,EAFqB,KAEXC,EAFW,OAGMJ,oBAAS,GAHf,mBAGrBK,EAHqB,KAGVC,EAHU,KAItBC,EAAcC,iBAAO,MAyB3B,SAASC,IACPC,cAAcH,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBT,EAAS,8BACTE,EAAY,MACZE,GAAa,GAEf,IAAMM,EAAUjB,EAAQkB,KAAKC,MAAMX,EAAW,KACxCY,EAAUpB,EAAQQ,EAAqB,GAAVS,GAEnC,OACE,yBAAKI,UAAU,OACb,4BAAKf,GACL,yBAAKe,UAAU,SACb,8BAAOJ,GACP,mCACA,8BAAOG,IAET,yBAAKC,UAAU,YACXX,GAAa,4BAAQY,QA1C7B,YACOV,EAAYI,SAAW,QAE5BT,EAAS,uBACTI,GAAa,GACbC,EAAYI,QAAUO,aAAY,WAChCd,GAAY,SAACD,GACX,OAAIA,GAAY,EAAUA,EAAW,GAErCM,IACO,QAER,QA8BgB,SACdJ,GAAa,4BAAQY,QA5B5B,WAC6B,MAAvBV,EAAYI,UAChBD,cAAcH,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBT,EAAS,eACTI,GAAa,MAuBK,QACd,4BAAQW,QAASR,GAAjB,UAEF,yBAAKO,UAAU,UACb,qDACA,uBAAGA,UAAU,OAAb,iCAEG,uBAAGG,KAAK,8BAAR,cC3DXC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.6be2d331.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./App.css\";\n\nfunction padTime(time) {\n  return time.toString().padStart(2, \"0\");\n}\n\nexport default function App() {\n  const [title, setTitle] = useState(\"Let the countdown begin!\");\n  const [timeLeft, setTimeLeft] = useState(1500);\n  const [isRunning, setIsRunning] = useState(false);\n  const intervalRef = useRef(null);\n\n  function startTimer() {\n    if ((intervalRef.current /= null)) return;\n\n    setTitle(`You're doing great!`);\n    setIsRunning(true);\n    intervalRef.current = setInterval(() => {\n      setTimeLeft((timeLeft) => {\n        if (timeLeft >= 1) return timeLeft - 1;\n\n        resetTimer();\n        return 0;\n      });\n    }, 1000);\n  }\n\n  function stopTimer() {\n    if (intervalRef.current == null) return;\n    clearInterval(intervalRef.current);\n    intervalRef.current = null;\n    setTitle(\"Keep it up!\");\n    setIsRunning(false);\n  }\n\n  function resetTimer() {\n    clearInterval(intervalRef.current);\n    intervalRef.current = null;\n    setTitle(\"Ready to go another round?\");\n    setTimeLeft(25 * 60);\n    setIsRunning(false);\n  }\n  const minutes = padTime(Math.floor(timeLeft / 60));\n  const seconds = padTime(timeLeft - minutes * 60);\n\n  return (\n    <div className=\"app\">\n      <h2>{title}</h2>\n      <div className=\"timer\">\n        <span>{minutes}</span>\n        <span>:</span>\n        <span>{seconds}</span>\n      </div>\n      <div className=\"buttons\">\n        {!isRunning && <button onClick={startTimer}>Start</button>}\n        {isRunning && <button onClick={stopTimer}>Stop</button>}\n        <button onClick={resetTimer}>Reset</button>\n      </div>\n      <div className=\"footer\">\n        <p>Thank you for viewing!</p>\n        <p className=\"tag\">\n          Check out my other projects on\n          {<a href=\"https://github.com/tybeewx\"> github</a>}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}